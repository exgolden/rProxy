volumes:
  letsencrypt:
  acme-challenges:

networks:
  saas-network:
    driver: bridge

services:
  service1:
    build:
      context: ./python
    image: flask-service
    container_name: service1
    networks:
      - saas-network
    environment:
      - FLASK_ENV=production
      - SERVICE_NAME=1

  service2:
    build:
      context: ./python
    image: flask-service
    container_name: service2
    networks:
      - saas-network
    environment:
      - FLASK_ENV=production
      - SERVICE_NAME=2

  service3:
    build:
      context: ./python
    image: flask-service
    container_name: service3
    networks:
      - saas-network
    environment:
      - FLASK_ENV=production
      - SERVICE_NAME=3

  nginx:
    image: nginx:latest
    container_name: nginx
    depends_on:
      - service1
      - service2
      - service3
    networks:
      - saas-network
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - letsencrypt:/etc/letsencrypt
      - acme-challenges:/var/www/html
    ports:
      - 80:80
      - 443:443

  certbot:
    image: certbot/certbot
    container_name: certbot
    depends_on:
      - nginx
    networks:
      - saas-network
    volumes:
      - letsencrypt:/etc/letsencrypt
      - acme-challenges:/var/www/html
    entrypoint: >
      sh -c "trap exit TERM; while :; do
      sleep 6h & wait $${!};
      certbot certonly --webroot -w /var/www/html
      -d yamdynamics.dev -d service1.yamdynamics.dev --non-interactive --agree-tos --register-unsafely-without-email;
      done"
